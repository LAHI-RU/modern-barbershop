name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest

    # Use SQLite for CI to match local dev and keep runs fast and isolated

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, intl, pdo_sqlite
          coverage: none

      - name: Get Composer Cache
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer Dependencies
        run: composer install --no-progress --no-suggest --prefer-dist --no-interaction

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Install Node dependencies
        run: npm ci --silent

      - name: Prepare .env (use SQLite)
        run: |
          cp .env.example .env
          php artisan key:generate
          php -r "file_exists('database/database.sqlite') || touch('database/database.sqlite');"
          # Ensure the app uses sqlite in CI
          php -r "file_put_contents('.env', preg_replace('/^DB_CONNECTION=.*$/m', 'DB_CONNECTION=sqlite', file_get_contents('.env')));
          $env = file_get_contents('.env');
          if (! preg_match('/^DB_DATABASE=/m', $env)) { file_put_contents('.env', trim($env)."\nDB_DATABASE=database/database.sqlite\n"); } else { file_put_contents('.env', preg_replace('/^DB_DATABASE=.*$/m', 'DB_DATABASE=database/database.sqlite', $env)); }"

      - name: Run migrations & seed
        run: php artisan migrate --seed --no-interaction

      - name: Run tests
        run: php artisan test --no-interaction --colors=never
